<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.test03"/>

	<bean id="favorite" name="favoriteFood" class="com.test03.Food">
		<property name="name" value="치킨"></property>
		<property name="price" value="20000"></property>
	</bean> 
	
	<bean id="unFavorite" name="unFavoriteFood" class="com.test03.Food">
		<constructor-arg value="연근"></constructor-arg>
		<constructor-arg value="3000"></constructor-arg>
	</bean>
	
	<!-- <bean id="myFood" class="com.test03.MyFoodMgr">
		<property name="favoriteFood" ref="favorite"></property>
		<property name="unFavoriteFood" ref="unFavorite"></property>
	</bean> -->
	
</beans>

<!-- 
autowire 속성값
1. byName : 
	id/name으로  setter 자동 호출
	(name=favortieFood -> setFavoriteFood)
	setter와 같은 이름의 bean이 있으면 자동 할당 된다.

2. byType : 
	setter의 parameter type과 같은 type의 bean이 있으면 자동 할당
	setFavoriteFood(Food favoriteFood) -> Food type의 bean 자동 할당

3. constructor :
	생성자의 parameter와 같은 type의 bean 자동 할당

4. default(autodetect) :
	생성자에 할당할 type이 있는지 먼저 확인 후, (constructor)
	없으면 메서드에서 type이 있는지 확인하여 할당 (byType)
	* 기본 생성자가 있으면 기본생성자 호출
	
	@Autowired라는 어노테이션 옵션으로 많이 쓰인다.



 -->
 
 
 
 
 
 
 
 
 
 